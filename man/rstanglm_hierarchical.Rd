% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rstanglm_hierarchical.R
\name{rstanglm_hierarchical}
\alias{rstanglm_hierarchical}
\title{Hierarchical Bayesian generalized linear models}
\usage{
rstanglm_hierarchical(
  formula,
  family,
  data,
  beta.precision,
  m.precision,
  m.location,
  start = NULL,
  maxit = 100,
  tol = 1e-06,
  ...
)
}
\arguments{
\item{formula}{a two-sided object of class \code{\link[stats]{formula}}.}

\item{family}{an object of type \code{\link[stats]{family}} giving distribution and link function}

\item{data}{a \code{\link[base]{data.frame}} giving all variables in \code{formula}}

\item{beta.precision}{a scalar giving the prior precision parameter for the regression coefficients. This is denoted by \eqn{a_0} in Chen and Ibrahim (2003)}

\item{m.precision}{a scalar giving the precision parameter for the hierarchical prior}

\item{m.location}{a \eqn{n}-dimensional vector giving the prior prediction for the responses}

\item{start}{a \eqn{p}-dimensional vector giving starting value for IRLS (used for computing the normalizing constant). The default utilizes the value of \code{m.location}}

\item{maxit}{an integer giving the maximum number of iterations for Fisher scoring (Used for computing the normalizing constant).}

\item{tol}{tolerance parameter in Fisher scoring algorithm}

\item{...}{arguments passed to \code{\link[rstan]{sampling}} (e.g. iter, chains, warmup, etc.).}
}
\value{
an object of class \link[rstan:stanfit-class]{rstan::stanfit} returned by \code{rstan::sampling}
}
\description{
Sample from the posterior density of a hierarchical Bayesian GLM using Stan.
Currently only supports binomial and Poisson models.
}
\examples{
## binary regression example
set.seed(123)
n      = 100
X      = cbind(1, rnorm(n, mean = 6, sd = 2))
beta   = c(3, -0.5)
eta    = X \%*\% beta
mu     = 1 / (1 + exp(-eta))
y      = rbinom(n, 1, mu)
lambda = 20

fit       = glm(y ~ 0 + X, family = binomial())
betahat   = coef(fit)
thetahat  = X \%*\% betahat

b0      = c(3, -.25)
nu0     = X \%*\% b0
m0      = make.link('logit')$linkinv(nu0)
lambda0 = 10
data = data.frame(y = y, x = X[, 2])

# options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
smpl = rstanglm_hierarchical(
  y ~ x, binomial(), data, 10, 20, as.vector(m0), chains = 1, iter = 100
)
}
